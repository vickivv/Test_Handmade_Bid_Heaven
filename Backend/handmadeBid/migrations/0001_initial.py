# Generated by Django 5.0.4 on 2024-04-11 01:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressid', models.AutoField(primary_key=True, serialize=False)),
                ('street', models.CharField(db_column='Street', max_length=255)),
                ('streeoptional', models.CharField(blank=True, db_column='StreeOptional', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='Zipcode', max_length=20, null=True)),
            ],
            options={
                'db_table': 'ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bidding',
            fields=[
                ('biddingid', models.AutoField(primary_key=True, serialize=False)),
                ('bidprice', models.DecimalField(db_column='BidPrice', decimal_places=2, max_digits=7)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('biddate', models.DateField(db_column='BidDate')),
                ('activedays', models.IntegerField(blank=True, db_column='ActiveDays', null=True)),
                ('status', models.CharField(db_column='Status', max_length=8)),
            ],
            options={
                'db_table': 'BIDDING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.IntegerField(db_column='CategoryID', primary_key=True, serialize=False)),
                ('cname', models.CharField(blank=True, db_column='CName', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'CATEGORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(primary_key=True, serialize=False)),
                ('orderdate', models.DateField(blank=True, db_column='OrderDate', null=True)),
                ('orderstatus', models.CharField(db_column='OrderStatus', max_length=10)),
            ],
            options={
                'db_table': 'ORDERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('pictureid', models.AutoField(primary_key=True, serialize=False)),
                ('productid', models.IntegerField(db_column='ProductID', null=True)),
                ('picture', models.ImageField(upload_to='photos')),
            ],
            options={
                'db_table': 'PICTURES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('productid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('startprice', models.DecimalField(blank=True, db_column='StartPrice', decimal_places=2, max_digits=7, null=True)),
                ('pictureid', models.IntegerField(db_column='PictureID')),
                ('postdate', models.DateField(blank=True, db_column='PostDate', null=True)),
                ('status', models.CharField(db_column='Status', max_length=8)),
                ('inventory', models.IntegerField(db_column='Inventory')),
            ],
            options={
                'db_table': 'PRODUCTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('reviewid', models.AutoField(primary_key=True, serialize=False)),
                ('reviewertype', models.CharField(db_column='ReviewerType', max_length=6)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=1000, null=True)),
                ('reviewdate', models.DateField(blank=True, db_column='ReviewDate', null=True)),
                ('rate', models.DecimalField(blank=True, db_column='Rate', decimal_places=1, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'REVIEWS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trackingnumber', models.CharField(db_column='TrackingNumber', max_length=50)),
                ('addressid', models.IntegerField(db_column='AddressID')),
                ('status', models.CharField(db_column='Status', max_length=17)),
            ],
            options={
                'db_table': 'SHIPMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('orderid', models.OneToOneField(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='handmadeBid.orders')),
                ('paymentstatus', models.CharField(db_column='PaymentStatus', max_length=9)),
                ('paymentmethod', models.CharField(db_column='PaymentMethod', max_length=17)),
            ],
            options={
                'db_table': 'PAYMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('Email', models.EmailField(db_column='Email', max_length=254, unique=True, verbose_name='email address')),
                ('Fname', models.CharField(db_column='Fname', max_length=25)),
                ('Lname', models.CharField(db_column='Lname', max_length=25)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'BASEUSER',
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('UserID', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('base_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ADMINUSER',
            },
        ),
        migrations.CreateModel(
            name='NormalUser',
            fields=[
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('Username', models.CharField(db_column='Username', max_length=50, unique=True)),
                ('DefaultAddressID', models.IntegerField(blank=True, db_column='DefaultAddressID', null=True)),
                ('Phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
                ('Rate', models.DecimalField(blank=True, db_column='Rate', decimal_places=1, max_digits=3, null=True)),
                ('ManageID', models.ForeignKey(db_column='ManageID', on_delete=django.db.models.deletion.CASCADE, related_name='managed_users', to='handmadeBid.adminuser')),
                ('base_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'NORMALUSER',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('subject_type', models.CharField(choices=[('Product', 'Product'), ('Order', 'Order')], db_column='subject_type', max_length=10)),
                ('admin_receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_admin_messages', to='handmadeBid.adminuser')),
                ('admin_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_admin_messages', to='handmadeBid.adminuser')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='handmadeBid.orders')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='handmadeBid.products')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_normal_messages', to='handmadeBid.normaluser')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_normal_messages', to='handmadeBid.normaluser')),
            ],
            options={
                'db_table': 'MESSAGES',
            },
        ),
    ]
